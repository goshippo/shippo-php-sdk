<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


class CustomsDeclarationCreateRequest
{
    /**
     * Expresses that the certify_signer has provided all information of this customs declaration truthfully.
     *
     * @var bool $certify
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certify')]
    public bool $certify;

    /**
     * Name of the person who created the customs declaration and is responsible for the validity of all 
     *
     * information provided.
     *
     * @var string $certifySigner
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certify_signer')]
    public string $certifySigner;

    /**
     *
     * @var CustomsDeclarationContentsTypeEnum $contentsType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contents_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationContentsTypeEnum')]
    public CustomsDeclarationContentsTypeEnum $contentsType;

    /**
     * $items
     *
     * @var array<CustomsItemCreateRequest> $items
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('items')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Shippo\API\Models\Components\CustomsItemCreateRequest>')]
    public array $items;

    /**
     *
     * @var CustomsDeclarationNonDeliveryOptionEnum $nonDeliveryOption
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('non_delivery_option')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationNonDeliveryOptionEnum')]
    public CustomsDeclarationNonDeliveryOptionEnum $nonDeliveryOption;

    /**
     * **required if eel_pfc is `AES_ITN`**<br>
     *
     * AES / ITN reference of the shipment.
     *
     * @var ?string $aesItn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('aes_itn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $aesItn = null;

    /**
     *
     * @var ?CustomsDeclarationB13AFilingOptionEnum $b13aFilingOption
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('b13a_filing_option')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationB13AFilingOptionEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsDeclarationB13AFilingOptionEnum $b13aFilingOption = null;

    /**
     * **must be provided if and only if b13a_filing_option is provided**<br>
     *
     * Represents:<br> the Proof of Report (POR) Number when b13a_filing_option is `FILED_ELECTRONICALLY`;<br> 
     * the Summary ID Number when b13a_filing_option is `SUMMARY_REPORTING`;<br> 
     * or the Exemption Number when b13a_filing_option is `NOT_REQUIRED`.
     *
     * @var ?string $b13aNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('b13a_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $b13aNumber = null;

    /**
     * Certificate reference of the shipment.
     *
     * @var ?string $certificate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certificate')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $certificate = null;

    /**
     *
     * @var ?bool $commercialInvoice
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('commercial_invoice')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $commercialInvoice = null;

    /**
     * **required if contents_type is `OTHER`**<br>
     *
     * Explanation of the type of goods of the shipment.
     *
     * @var ?string $contentsExplanation
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contents_explanation')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $contentsExplanation = null;

    /**
     * Disclaimer for the shipment and customs information that have been provided.
     *
     * @var ?string $disclaimer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('disclaimer')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $disclaimer = null;

    /**
     * Specifies who will pay the duties for the shipment. Only accepted for FedEx shipments.
     *
     * @var ?CustomsDeclarationCreateRequestDutiesPayor $dutiesPayor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duties_payor')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationCreateRequestDutiesPayor|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsDeclarationCreateRequestDutiesPayor $dutiesPayor = null;

    /**
     * Additional exporter identification that may be required to ship in certain countries
     *
     * @var ?CustomsExporterIdentification $exporterIdentification
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exporter_identification')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsExporterIdentification|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsExporterIdentification $exporterIdentification = null;

    /**
     * Exporter reference of an export shipment.
     *
     * @var ?string $exporterReference
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('exporter_reference')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $exporterReference = null;

    /**
     * Importer reference of an import shipment.
     *
     * @var ?string $importerReference
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('importer_reference')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $importerReference = null;

    /**
     * Indicates whether the shipment's destination VAT has been collected. May be required for some destinations.
     *
     * @var ?bool $isVatCollected
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_vat_collected')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isVatCollected = null;

    /**
     * Invoice reference of the shipment.
     *
     * @var ?string $invoice
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('invoice')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $invoice = null;

    /**
     * License reference of the shipment.
     *
     * @var ?string $license
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('license')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $license = null;

    /**
     * A string of up to 100 characters that can be filled with any additional information you 
     *
     * want to attach to the object.
     *
     * @var ?string $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $metadata = null;

    /**
     * Additional notes to be included in the customs declaration.
     *
     * @var ?string $notes
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('notes')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $notes = null;

    /**
     * Object that represents the address of the importer
     *
     * @var ?AddressImporter $addressImporter
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('address_importer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\AddressImporter|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AddressImporter $addressImporter = null;

    /**
     *
     * @var ?CustomsDeclarationEelPfcEnum $eelPfc
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('eel_pfc')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationEelPfcEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsDeclarationEelPfcEnum $eelPfc = null;

    /**
     *
     * @var ?CustomsDeclarationIncotermEnum $incoterm
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('incoterm')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsDeclarationIncotermEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsDeclarationIncotermEnum $incoterm = null;

    /**
     *
     * @var ?bool $test
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('test')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $test = null;

    /**
     * @param  bool  $certify
     * @param  string  $certifySigner
     * @param  CustomsDeclarationContentsTypeEnum  $contentsType
     * @param  array<CustomsItemCreateRequest>  $items
     * @param  CustomsDeclarationNonDeliveryOptionEnum  $nonDeliveryOption
     * @param  ?string  $aesItn
     * @param  ?CustomsDeclarationB13AFilingOptionEnum  $b13aFilingOption
     * @param  ?string  $b13aNumber
     * @param  ?string  $certificate
     * @param  ?bool  $commercialInvoice
     * @param  ?string  $contentsExplanation
     * @param  ?string  $disclaimer
     * @param  ?CustomsDeclarationCreateRequestDutiesPayor  $dutiesPayor
     * @param  ?CustomsExporterIdentification  $exporterIdentification
     * @param  ?string  $exporterReference
     * @param  ?string  $importerReference
     * @param  ?bool  $isVatCollected
     * @param  ?string  $invoice
     * @param  ?string  $license
     * @param  ?string  $metadata
     * @param  ?string  $notes
     * @param  ?AddressImporter  $addressImporter
     * @param  ?CustomsDeclarationEelPfcEnum  $eelPfc
     * @param  ?CustomsDeclarationIncotermEnum  $incoterm
     * @param  ?bool  $test
     * @phpstan-pure
     */
    public function __construct(bool $certify, string $certifySigner, CustomsDeclarationContentsTypeEnum $contentsType, array $items, CustomsDeclarationNonDeliveryOptionEnum $nonDeliveryOption, ?string $aesItn = null, ?CustomsDeclarationB13AFilingOptionEnum $b13aFilingOption = null, ?string $b13aNumber = null, ?string $certificate = null, ?bool $commercialInvoice = null, ?string $contentsExplanation = null, ?string $disclaimer = null, ?CustomsDeclarationCreateRequestDutiesPayor $dutiesPayor = null, ?CustomsExporterIdentification $exporterIdentification = null, ?string $exporterReference = null, ?string $importerReference = null, ?bool $isVatCollected = null, ?string $invoice = null, ?string $license = null, ?string $metadata = null, ?string $notes = null, ?AddressImporter $addressImporter = null, ?CustomsDeclarationEelPfcEnum $eelPfc = null, ?CustomsDeclarationIncotermEnum $incoterm = null, ?bool $test = null)
    {
        $this->certify = $certify;
        $this->certifySigner = $certifySigner;
        $this->contentsType = $contentsType;
        $this->items = $items;
        $this->nonDeliveryOption = $nonDeliveryOption;
        $this->aesItn = $aesItn;
        $this->b13aFilingOption = $b13aFilingOption;
        $this->b13aNumber = $b13aNumber;
        $this->certificate = $certificate;
        $this->commercialInvoice = $commercialInvoice;
        $this->contentsExplanation = $contentsExplanation;
        $this->disclaimer = $disclaimer;
        $this->dutiesPayor = $dutiesPayor;
        $this->exporterIdentification = $exporterIdentification;
        $this->exporterReference = $exporterReference;
        $this->importerReference = $importerReference;
        $this->isVatCollected = $isVatCollected;
        $this->invoice = $invoice;
        $this->license = $license;
        $this->metadata = $metadata;
        $this->notes = $notes;
        $this->addressImporter = $addressImporter;
        $this->eelPfc = $eelPfc;
        $this->incoterm = $incoterm;
        $this->test = $test;
    }
}