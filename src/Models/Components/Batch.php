<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


class Batch
{
    /**
     * ID of the Carrier Account object to use as the default for all shipments in this Batch. 
     *
     * The carrier account can be changed on a per-shipment basis by changing the carrier_account in the 
     * corresponding BatchShipment object.
     *
     * @var string $defaultCarrierAccount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('default_carrier_account')]
    public string $defaultCarrierAccount;

    /**
     * Token of the service level to use as the default for all shipments in this Batch. 
     *
     * The servicelevel can be changed on a per-shipment basis by changing the servicelevel_token in the 
     * corresponding BatchShipment object. <a href="#tag/Service-Levels">Servicelevel tokens can be found here.</a>
     *
     * @var string $defaultServicelevelToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('default_servicelevel_token')]
    public string $defaultServicelevelToken;

    /**
     *
     * @var BatchShipmentPaginatedList $batchShipments
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('batch_shipments')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\BatchShipmentPaginatedList')]
    public BatchShipmentPaginatedList $batchShipments;

    /**
     * An array of URLs each pointing to a merged file of 100 labels each
     *
     * @var array<string> $labelUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('label_url')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>')]
    public array $labelUrl;

    /**
     * Date and time of Batch creation
     *
     * @var string $objectCreated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object_created')]
    public string $objectCreated;

    /**
     * Unique identifier of the given Batch object
     *
     * @var string $objectId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object_id')]
    public string $objectId;

    /**
     * Username of the user who created the Address object.
     *
     * @var string $objectOwner
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object_owner')]
    public string $objectOwner;

    /**
     * An object containing the following counts:<br>`creation_succeeded`<br>`creation_failed`<br>`purchase_succeeded`<br>`purchase_failed`
     *
     * @var ObjectResults $objectResults
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object_results')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\ObjectResults')]
    public ObjectResults $objectResults;

    /**
     * Date and time of last update to the Batch
     *
     * @var string $objectUpdated
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object_updated')]
    public string $objectUpdated;

    /**
     * Batches that are `VALIDATING` are being created and validated<br>
     *
     * `VALID` batches can be purchased<br>
     * `INVALID` batches cannot be purchased, `INVALID` BatchShipments must be removed<br>
     * Batches that are in the `PURCHASING` state are being purchased<br>
     * `PURCHASED` batches are finished purchasing.
     *
     * @var BatchStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\BatchStatus')]
    public BatchStatus $status;

    /**
     * Print format of the <a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/">label</a>. If empty, will use the default format set from 
     *
     * <a href="https://apps.goshippo.com/settings/labels">the Shippo dashboard.</a>
     *
     * @var ?LabelFileTypeEnum $labelFiletype
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('label_filetype')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\LabelFileTypeEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LabelFileTypeEnum $labelFiletype = null;

    /**
     * A string of up to 100 characters that can be filled with any additional information you want to attach to the object.
     *
     * @var ?string $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $metadata = null;

    /**
     *
     * @var ?bool $test
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('test')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $test = null;

    /**
     * @param  string  $defaultCarrierAccount
     * @param  string  $defaultServicelevelToken
     * @param  BatchShipmentPaginatedList  $batchShipments
     * @param  array<string>  $labelUrl
     * @param  string  $objectCreated
     * @param  string  $objectId
     * @param  string  $objectOwner
     * @param  ObjectResults  $objectResults
     * @param  string  $objectUpdated
     * @param  BatchStatus  $status
     * @param  ?LabelFileTypeEnum  $labelFiletype
     * @param  ?string  $metadata
     * @param  ?bool  $test
     */
    public function __construct(string $defaultCarrierAccount, string $defaultServicelevelToken, BatchShipmentPaginatedList $batchShipments, array $labelUrl, string $objectCreated, string $objectId, string $objectOwner, ObjectResults $objectResults, string $objectUpdated, BatchStatus $status, ?LabelFileTypeEnum $labelFiletype = null, ?string $metadata = null, ?bool $test = null)
    {
        $this->defaultCarrierAccount = $defaultCarrierAccount;
        $this->defaultServicelevelToken = $defaultServicelevelToken;
        $this->batchShipments = $batchShipments;
        $this->labelUrl = $labelUrl;
        $this->objectCreated = $objectCreated;
        $this->objectId = $objectId;
        $this->objectOwner = $objectOwner;
        $this->objectResults = $objectResults;
        $this->objectUpdated = $objectUpdated;
        $this->status = $status;
        $this->labelFiletype = $labelFiletype;
        $this->metadata = $metadata;
        $this->test = $test;
    }
}