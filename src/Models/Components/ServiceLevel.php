<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


/**
 * ServiceLevel - Used for some Service Levels to link to the more "generic" version of this Service Level - for example, 
 *
 * if this Service Level is a variation specific to shipments to Europe("ups_saver_eu"), the "parent" is 
 * the fully generic version ("ups_saver"). Helpful when displaying Service Levels to users. Has the same 
 * structure of the servicelevel - "name", "token", "terms", and "extended_token", or it is otherwise null.
 */
class ServiceLevel
{
    /**
     * Name of the Rate's servicelevel, e.g. `International Priority` or `Standard Post`. 
     *
     * A servicelevel commonly defines the transit time of a Shipment (e.g., Express vs. Standard), along with other properties. 
     * These names vary depending on the provider.
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Further clarification of the service.
     *
     * @var ?string $terms
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('terms')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $terms = null;

    /**
     * Token of the Rate's servicelevel, e.g. `usps_priority` or `fedex_ground`. 
     *
     * See <a href="#tag/Service-Levels">servicelevels</a>.
     *
     * @var ?string $token
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('token')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $token = null;

    /**
     * Unique, extended version of the Service Level "token". 
     *
     * Guaranteed to be unique across all Service Levels, and may help offer insight into the specific Service Level it describes.
     *
     * @var ?string $extendedToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('extended_token')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $extendedToken = null;

    /**
     * @param  ?string  $name
     * @param  ?string  $terms
     * @param  ?string  $token
     * @param  ?string  $extendedToken
     * @phpstan-pure
     */
    public function __construct(?string $name = null, ?string $terms = null, ?string $token = null, ?string $extendedToken = null)
    {
        $this->name = $name;
        $this->terms = $terms;
        $this->token = $token;
        $this->extendedToken = $extendedToken;
    }
}