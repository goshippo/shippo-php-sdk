<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


class TransactionCreateRequest
{
    /**
     *
     * @var string $rate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('rate')]
    public string $rate;

    /**
     * Print format of the <a href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/">label</a>. If empty, will use the default format set from 
     *
     * <a href="https://apps.goshippo.com/settings/labels">the Shippo dashboard.</a>
     *
     * @var ?LabelFileTypeEnum $labelFileType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('label_file_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\LabelFileTypeEnum|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LabelFileTypeEnum $labelFileType = null;

    /**
     *
     * @var ?string $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $metadata = null;

    /**
     *
     * @var ?string $order
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('order')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $order = null;

    /**
     *
     * @var ?bool $async
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('async')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $async = null;

    /**
     * @param  string  $rate
     * @param  ?bool  $async
     * @param  ?LabelFileTypeEnum  $labelFileType
     * @param  ?string  $metadata
     * @param  ?string  $order
     * @phpstan-pure
     */
    public function __construct(string $rate, ?LabelFileTypeEnum $labelFileType = null, ?string $metadata = null, ?string $order = null, ?bool $async = true)
    {
        $this->rate = $rate;
        $this->labelFileType = $labelFileType;
        $this->metadata = $metadata;
        $this->order = $order;
        $this->async = $async;
    }
}