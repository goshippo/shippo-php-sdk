<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


/** CustomsExporterIdentification - Additional exporter identification that may be required to ship in certain countries */
class CustomsExporterIdentification
{
    /**
     * Economic Operators' Registration and Identification (EORI) number. Must start with a 2 character 
     *
     * country code followed by a 6-17 character alphanumeric identifier (e.g. PL1234567890ABCDE).
     * <a href="https://ec.europa.eu/taxation_customs/business/customs-procedures/general-overview/economic-operators-registration-identification-number-eori_en">More information on EORI.</a>
     *
     * @var ?string $eoriNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('eori_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $eoriNumber = null;

    /**
     * Tax identification that may be required to ship in certain countries. Typically used to assess duties on 
     *
     * goods that are crossing a border.
     *
     * @var ?CustomsTaxIdentification $taxId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax_id')]
    #[\Speakeasy\Serializer\Annotation\Type('\Shippo\API\Models\Components\CustomsTaxIdentification|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CustomsTaxIdentification $taxId = null;

    /**
     * @param  ?string  $eoriNumber
     * @param  ?CustomsTaxIdentification  $taxId
     * @phpstan-pure
     */
    public function __construct(?string $eoriNumber = null, ?CustomsTaxIdentification $taxId = null)
    {
        $this->eoriNumber = $eoriNumber;
        $this->taxId = $taxId;
    }
}