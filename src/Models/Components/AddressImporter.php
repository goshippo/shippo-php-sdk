<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Shippo\API\Models\Components;


/** AddressImporter - Object that represents the address of the importer */
class AddressImporter
{
    /**
     * First and Last Name of the addressee
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Company Name
     *
     * @var ?string $company
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('company')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $company = null;

    /**
     * First street line, 35 character limit. Usually street number and street name (except for DHL Germany, see street_no).
     *
     * @var ?string $street1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street1')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $street1 = null;

    /**
     * Second street line, 35 character limit.
     *
     * @var ?string $street2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street2')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $street2 = null;

    /**
     * Third street line, 35 character limit. 
     *
     * Only accepted for USPS international shipments, UPS domestic and UPS international shipments.
     *
     * @var ?string $street3
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street3')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $street3 = null;

    /**
     * Street number of the addressed building. 
     *
     * This field can be included in street1 for all carriers except for DHL Germany.
     *
     * @var ?string $streetNo
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('street_no')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $streetNo = null;

    /**
     * Name of a city
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $city = null;

    /**
     * **required for purchase for some countries**<br>
     *
     * State/Province values are required for shipments from/to the US, AU, and CA. UPS requires province for some 
     * countries (i.e Ireland). To receive more accurate quotes, passing this field is recommended. Most carriers 
     * only accept two or three character state abbreviations.
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $state = null;

    /**
     * Postal code of an Address.
     *
     * @var ?string $zip
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('zip')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $zip = null;

    /**
     * Example: `US` or `DE`. All accepted values can be found on the 
     *
     * <a href="http://www.iso.org/" target="blank">Official ISO Website</a>.
     * Sending a country is always required.
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * Addresses containing a phone number allow carriers to call the recipient when delivering the Parcel. This 
     *
     * increases the probability of delivery and helps to avoid accessorial charges after a Parcel has been shipped.    
     *
     * @var ?string $phone
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('phone')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $phone = null;

    /**
     * E-mail address of the contact person, RFC3696/5321-compliant.
     *
     * @var ?string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $email = null;

    /**
     * Indicates whether the address provided is a residential address or not.
     *
     * @var ?bool $isResidential
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_residential')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isResidential = null;

    /**
     * @param  ?string  $name
     * @param  ?string  $company
     * @param  ?string  $street1
     * @param  ?string  $street2
     * @param  ?string  $street3
     * @param  ?string  $streetNo
     * @param  ?string  $city
     * @param  ?string  $state
     * @param  ?string  $zip
     * @param  ?string  $country
     * @param  ?string  $phone
     * @param  ?string  $email
     * @param  ?bool  $isResidential
     */
    public function __construct(?string $name = null, ?string $company = null, ?string $street1 = null, ?string $street2 = null, ?string $street3 = null, ?string $streetNo = null, ?string $city = null, ?string $state = null, ?string $zip = null, ?string $country = null, ?string $phone = null, ?string $email = null, ?bool $isResidential = null)
    {
        $this->name = $name;
        $this->company = $company;
        $this->street1 = $street1;
        $this->street2 = $street2;
        $this->street3 = $street3;
        $this->streetNo = $streetNo;
        $this->city = $city;
        $this->state = $state;
        $this->zip = $zip;
        $this->country = $country;
        $this->phone = $phone;
        $this->email = $email;
        $this->isResidential = $isResidential;
    }
}